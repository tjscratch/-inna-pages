/**
 * Created by max on 05.08.16.
 */
import block from 'bem-cn';
import React, {Component, PropTypes} from 'react';
import {connect} from 'react-redux'

let b = block('TravelUiInput');

class Input extends Component {
    
    static displayName = 'Input';
    
    static contextTypes = {
        componentStyle: React.PropTypes.object
    };
    
    static propTypes = {
        className : PropTypes.string,
        inputStyle: PropTypes.object,
        isError   : PropTypes.bool,
        isSuccess : PropTypes.bool,
        label     : PropTypes.string,
        message   : PropTypes.node,
        onChange  : PropTypes.func,
        onClick   : PropTypes.func,
        onFocus   : PropTypes.func,
        readOnly  : PropTypes.bool,
        style     : PropTypes.object,
        type      : PropTypes.string,
        value     : PropTypes.string
    };
    
    static defaultProps = {
        className : '',
        inputStyle: {},
        isError   : false,
        isSuccess : false,
        message   : '',
        readOnly  : false,
        style     : {},
        type      : 'text',
        value     : ''
    };
    
    
    fieldFocus(e) {
        const {
            borderColorPrimary
        } = this.props.UiTravel;
        
        let field = e.target;
        
        field.className = b('Field')({focus: true});
        field.style.borderColor = borderColorPrimary;
    }
    
    fieldOnBlur(e) {
        const {borderColor, borderColorError} = this.props.UiTravel;
        const {invalid} = this.props;
        
        let field = e.target;
        
        field.className = b('Field')({used: (field.value && field.value.length) ? true : false});
    
        if (invalid) {
            field.style.borderColor = borderColorError;
        } else {
            field.style.borderColor = borderColor;
        }
    }
    
    render() {
        const {
            label,
            style,
            invalid,
            error,
            onChange,
            onClick,
            type,
            value,
            className
        } = this.props;
        
        let inputStyle = this.props.inputStyle
        
        return (
            <div
                className={b({skin: className})}
                style={style}>
                <input
                    onClick={onClick}
                    onFocus={this.fieldFocus.bind(this)}
                    onBlur={this.fieldOnBlur.bind(this)}
                    type={type}
                    className={b('Field')({used: (value && value.length) ? true : false})}
                    style={inputStyle}
                    value={value}
                    onChange={onChange}
                    ref='field'
                    required/>
                <label className={b('Label')}>
                  <span ref='label'>
                    {label}
                  </span>
                </label>
                {invalid ?
                    <div className={b('Info')({error: invalid ? true : false})}>
                        {error}
                    </div>
                    :
                    null
                }
            </div>
        );
    }
}

function mapStateToProps(state) {
    return {
        UiTravel: state.UiTravel
    }
}

export default connect(mapStateToProps)(Input)