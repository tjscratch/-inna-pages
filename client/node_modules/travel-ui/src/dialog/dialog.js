/**
 * Created by max on 05.08.16.
 */
import block from 'bem-cn'
import React, {Component, PropTypes} from 'react'
import ReactDOM from 'react-dom'
import ReactCSSTransitionGroup from 'react-addons-css-transition-group'
import {canUseDOM} from 'fbjs/lib/ExecutionEnvironment'

let b = block('TravelUiDialog');

class Dialog extends Component {
    
    static displayName = 'Dialog';
    
    static contextTypes = {
        componentStyle: React.PropTypes.object
    };
    
    static propTypes = {
        className: PropTypes.string,
        isShow   : PropTypes.bool
    };
    
    static defaultProps = {
        className: '',
        isShow   : false
    };
    
    
    componentDidMount() {
        this._overlayContainer = document.createElement('div');
        this.renderOverlay(this.props);
    }
    
    componentWillReceiveProps(newProps) {
        this.renderOverlay(newProps);
    }
    
    componentWillUnmount() {
        this._overlayContainer = null;
    }
    
    closeModal(event) {
        if (this.props.isOverlay) {
            this.props.isOverlay(event);
        }
    }
    
    renderOverlay(props) {
        const {
            className,
            children,
            isShow
        } = this.props;
        
        const container = canUseDOM ? document.body : null;
        
        var overlayChild = null;
        
        if (isShow !== props.isShow) {
            if (props.isShow) {
                this._overlayContainer.className = b({skin: className});
                
                if (container.className != b('ScrollFix', {skin: className})) {
                    container.className += b('ScrollFix', {skin: className});
                }
                
                container.appendChild(this._overlayContainer);
                
                
                overlayChild = (
                    <div className={b('Container', {skin: className})}>
                        <div className={b('Overlay', {skin: className})}
                             onClick={this.closeModal.bind(this)}></div>
                        {children}
                    </div>
                )
                
            } else {
                var _overlayContainer = this._overlayContainer;
                
                setTimeout(function () {
                    container.className = container.className.replace(b('ScrollFix', {skin: className}), '');
                    ReactDOM.unmountComponentAtNode(_overlayContainer);
                    container.removeChild(_overlayContainer);
                }, 200)
            }
            
            let overlay = (
                <ReactCSSTransitionGroup
                    transitionName='TravelUiDialog__Container'
                    transitionAppear={true}
                    transitionLeave={true}
                    transitionEnter={true}
                    transitionAppearTimeout={300}
                    transitionEnterTimeout={300}
                    transitionLeaveTimeout={200}
                >
                    {overlayChild}
                </ReactCSSTransitionGroup>
            )
            
            ReactDOM.render(
                overlay,
                this._overlayContainer
            )
            
        }
        
    }
    
    render() {
        return null
    }
}

export default Dialog