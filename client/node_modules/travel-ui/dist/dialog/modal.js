'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /**
                    * Created by max on 05.08.16.
                    */


var _bemCn = require('bem-cn');

var _bemCn2 = _interopRequireDefault(_bemCn);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _dialog = require('./dialog');

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var b = (0, _bemCn2.default)('TravelUiModal');

var Modal = (_temp = _class = function (_Component) {
    _inherits(Modal, _Component);

    function Modal() {
        _classCallCheck(this, Modal);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Modal).apply(this, arguments));
    }

    _createClass(Modal, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _dialog2.default,
                { isShow: this.props.isShow,
                    isOverlay: this.props.isOverlay },
                _react2.default.createElement(
                    'div',
                    { className: b({ small: this.props.small, medium: this.props.medium, large: this.props.large }) },
                    this.props.children
                )
            );
        }
    }]);

    return Modal;
}(_react.Component), _class.displayName = 'Modal', _class.contextTypes = {
    componentStyle: _react2.default.PropTypes.object
}, _class.propTypes = {
    className: _react.PropTypes.string,
    isShow: _react.PropTypes.bool,
    small: _react.PropTypes.bool,
    medium: _react.PropTypes.bool,
    large: _react.PropTypes.bool
}, _class.defaultProps = {
    className: '',
    isShow: false,
    small: true,
    medium: false,
    large: false
}, _temp);
exports.default = Modal;