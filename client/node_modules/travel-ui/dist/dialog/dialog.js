'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /**
                    * Created by max on 05.08.16.
                    */


var _bemCn = require('bem-cn');

var _bemCn2 = _interopRequireDefault(_bemCn);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactAddonsCssTransitionGroup = require('react-addons-css-transition-group');

var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

var _ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var b = (0, _bemCn2.default)('TravelUiDialog');

var Dialog = (_temp = _class = function (_Component) {
    _inherits(Dialog, _Component);

    function Dialog() {
        _classCallCheck(this, Dialog);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Dialog).apply(this, arguments));
    }

    _createClass(Dialog, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this._overlayContainer = document.createElement('div');
            this.renderOverlay(this.props);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(newProps) {
            this.renderOverlay(newProps);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            this._overlayContainer = null;
        }
    }, {
        key: 'closeModal',
        value: function closeModal(event) {
            if (this.props.isOverlay) {
                this.props.isOverlay(event);
            }
        }
    }, {
        key: 'renderOverlay',
        value: function renderOverlay(props) {
            var _props = this.props;
            var className = _props.className;
            var children = _props.children;
            var isShow = _props.isShow;


            var container = _ExecutionEnvironment.canUseDOM ? document.body : null;

            var overlayChild = null;

            if (isShow !== props.isShow) {
                if (props.isShow) {
                    this._overlayContainer.className = b({ skin: className });

                    if (container.className != b('ScrollFix', { skin: className })) {
                        container.className += b('ScrollFix', { skin: className });
                    }

                    container.appendChild(this._overlayContainer);

                    overlayChild = _react2.default.createElement(
                        'div',
                        { className: b('Container', { skin: className }) },
                        _react2.default.createElement('div', { className: b('Overlay', { skin: className }),
                            onClick: this.closeModal.bind(this) }),
                        children
                    );
                } else {
                    var _overlayContainer = this._overlayContainer;

                    setTimeout(function () {
                        container.className = container.className.replace(b('ScrollFix', { skin: className }), '');
                        _reactDom2.default.unmountComponentAtNode(_overlayContainer);
                        container.removeChild(_overlayContainer);
                    }, 200);
                }

                var overlay = _react2.default.createElement(
                    _reactAddonsCssTransitionGroup2.default,
                    {
                        transitionName: 'TravelUiDialog__Container',
                        transitionAppear: true,
                        transitionLeave: true,
                        transitionEnter: true,
                        transitionAppearTimeout: 300,
                        transitionEnterTimeout: 300,
                        transitionLeaveTimeout: 200
                    },
                    overlayChild
                );

                _reactDom2.default.render(overlay, this._overlayContainer);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return null;
        }
    }]);

    return Dialog;
}(_react.Component), _class.displayName = 'Dialog', _class.contextTypes = {
    componentStyle: _react2.default.PropTypes.object
}, _class.propTypes = {
    className: _react.PropTypes.string,
    isShow: _react.PropTypes.bool
}, _class.defaultProps = {
    className: '',
    isShow: false
}, _temp);
exports.default = Dialog;